"use strict";const Ingenico={init:function(){if($(".ingenico-header .switch.test-live-toggle").click(function(e){if($(".ingenico-header .switch.test-live-toggle input:checked").length>0){var n=!0;if(["connection_live_pspid","connection_live_signature","connection_live_dl_user","connection_live_dl_password"].forEach(function(e,t,o){let a=$('[name="'+e+'"]');0!==a.length&&0!==a.val().length||(n=!1)}),!n)return Ingenico.openModal("credentials-live-validation-modal"),e.preventDefault(),!1;$("[name=connection_mode]").val("on"),$(".ingenico-header, .ingenico-settings").toggleClass("test").toggleClass("live"),$('[name="connection_test_pspid"],[name="connection_test_signature"],[name="connection_test_dl_user"],[name="connection_test_dl_password"]').removeProp("required"),$('[name="connection_live_pspid"],[name="connection_live_signature"],[name="connection_live_dl_user"],[name="connection_live_dl_password"]').prop("required",!0)}else $("[name=connection_mode]").val("off"),$('[name="connection_live_pspid"],[name="connection_live_signature"],[name="connection_live_dl_user"],[name="connection_live_dl_password"]').removeProp("required"),$('[name="connection_test_pspid"],[name="connection_test_signature"],[name="connection_test_dl_user"],[name="connection_test_dl_password"]').prop("required",!0)}),$(document).on("click",".ingenico-settings .modal-link",function(e){e.preventDefault();const n=$(e.target).data("modal-id");"payment-methods-list"===n&&Ingenico.getPaymentMethodModal(),Ingenico.openModal(n)}),$(document).on("click",".account-header",function(e){let n=$(this);if(n.prop("disabled"))return e.preventDefault(),!1;n.prop("disabled",!0),n.find(".collapse-btn").first().click(),setTimeout(function(){n.prop("disabled",!1)},500)}),$(document).on("click",".account-header",function(e){$(this).find("span").toggle()}),$(".modal-dialog .close, .modal-backdrop, .ingenico-modal").click(function(e){Ingenico.hasSomeParentTheClass(e.target,"modal-dialog")&&!Ingenico.hasSomeParentTheClass(e.target,"close")||(e.preventDefault(),Ingenico.closeModal())}),$(".switch > input").click(function(e){if($(this).hasClass("disabled"))return e.preventDefault(),!1}),$(".switch > input").change(function(){let e=$(this).data("toggle-name"),n=$(this).data("toggle-reverse");$(this).is(":checked")?1===parseInt(n)?$("."+e).slideUp():$("."+e).slideDown():1===parseInt(n)?$("."+e).slideDown():$("."+e).slideUp()}),$(".radio > input").change(function(){let e=$(this).val(),n=$(this).data("toggle-name");$("."+n).slideUp(),$("."+n+e).slideDown(),n+e==="paymentpage_typeINLINE"?($("#template_manager").click(),$("[name=paymentpage_template_name]").hide()):$("[name=paymentpage_template_name]").show()}),$("[name=paymentpage_type]").change(function(){"REDIRECT"===$(this).val()?($(".step1.inline").hide(),$(".step1.redirect").show(),$(".ppt.inline").hide(),$(".ppt.redirect").show()):"INLINE"===$(this).val()&&($(".step1.redirect").hide(),$(".step1.inline").show(),$(".ppt.redirect").hide(),$(".ppt.inline").show())}),$(".toggle-field").click(function(e){e.preventDefault(),Ingenico.closeModal()}),$(".country-list").keyup(function(){var e=$(this).val();Ingenico.filterCountries(e)}),$(".payment-methods-list").keyup(function(){var e=$(this).val();Ingenico.filterPaymentMethods(e)}),$(document).on("click","#export-settings",function(e){e.preventDefault(),$("#submitExportSettings").click()}),$(document).on("change","input[type=file]#support-import",function(e){const n=$("input[type=file]#support-import").val().split("\\").pop();$("#support .upload-label").html(n)}),$(document).on("click","#modalImportSettings",function(e){e.preventDefault(),Ingenico.openModal("upload-confirmation-modal")}),$(document).on("click","#submitModalImportSettings",function(e){e.preventDefault(),$("#submitImportSettings").click()}),$(document).on("click","[name=submit_save_payments]",function(e){e.preventDefault(),Ingenico.getModalPaymentMethods(function(e){(e.includes("afterpay")||e.includes("klarna"))&&Ingenico.openModal("openinvoice-choose-country-modal"),Ingenico.addPaymentMethod()})}),$(document).on("click",'#payment-methods-list input[name="payment_methods[]"]',function(e){Ingenico.getSelectedPaymentMethods(function(e){Ingenico.disableAfterpayOrKlarnaMethods(e)})}),$(document).on("click","#openinvoice-choose-country-modal .apply",function(){let e=$("[name=openinvoice_country]:checked").val();""===e&&(Ingenico.removePaymentMethod("afterpay"),Ingenico.removePaymentMethod("klarna")),$("[name=generic_country]").val(e),$.ajax(ingenico_ajax_url,{method:"POST",data:{method:"set_merchant_country",country:e},dataType:"json"}).success(function(e){Ingenico.closeModal("openinvoice-choose-country-modal")})}),$(document).on("click","#openinvoice-select-payment-modal .apply",function(){window.OPENINVOICE_METHOD=$("[name=openinvoice_method]:checked").val(),Ingenico.closeModal("openinvoice-select-payment-modal",function(){Ingenico.addCountries()})}),$(document).on("keyup",".payment-methods-list",function(e){const n=$(this).val();Ingenico.filterPaymentMethods(n)}),"undefined"!=typeof installments_amount_min){$("#installments_amount_range").slider({range:!0,min:1,max:24,values:[installments_amount_min,installments_amount_max],slide:function(e,n){let t=n.values[0],o=n.values[1];$("[name=instalments_flex_instalments_min]").val(t),$("[name=instalments_flex_instalments_max]").val(o),$("#installments_amount_range .ui-slider-handle b").remove();let a=$("#installments_amount_range .ui-slider-handle");a.eq(0).append("<b class='amount left-handler'><span id='min'>"+t+"</span></b>"),a.eq(1).append("<b class='amount right-handler'><span id='max'>"+o+"</span></b>")}});let e=$("#installments_amount_range .ui-slider-handle");e.eq(0).append("<b class='amount left-handler'><span id='min'>"+installments_amount_min+"</span></b>"),e.eq(1).append("<b class='amount right-handler'><span id='max'>"+installments_amount_max+"</span></b>"),$("#installments_period_range").slider({range:!0,min:1,max:90,values:[installments_period_min,installments_period_max],slide:function(e,n){let t=n.values[0],o=n.values[1];$("[name=instalments_flex_period_min]").val(t),$("[name=instalments_flex_period_max]").val(o),$("#installments_period_range .ui-slider-handle b").remove();let a=$("#installments_period_range .ui-slider-handle");a.eq(0).append("<b class='amount left-handler'><span id='min'>"+t+"</span></b>"),a.eq(1).append("<b class='amount right-handler'><span id='max'>"+o+"</span></b>")}});let n=$("#installments_period_range .ui-slider-handle");n.eq(0).append("<b class='amount left-handler'><span id='min'>"+installments_period_min+"</span></b>"),n.eq(1).append("<b class='amount right-handler'><span id='max'>"+installments_period_max+"</span></b>"),$("#installments_first_range").slider({range:!0,min:1,max:99,values:[installments_first_min,installments_first_max],slide:function(e,n){let t=n.values[0],o=n.values[1];$("[name=instalments_flex_firstpayment_min]").val(t),$("[name=instalments_flex_firstpayment_max]").val(o),$("#installments_first_range .ui-slider-handle b").remove();let a=$("#installments_first_range .ui-slider-handle");a.eq(0).append("<b class='amount left-handler'><span id='min'>"+t+"%</span></b>"),a.eq(1).append("<b class='amount right-handler'><span id='max'>"+o+"%</span></b>")}});let t=$("#installments_first_range .ui-slider-handle");t.eq(0).append("<b class='amount left-handler'><span id='min'>"+installments_first_min+"%</span></b>"),t.eq(1).append("<b class='amount right-handler'><span id='max'>"+installments_first_max+"%</span></b>")}$(".form-btn.mask").click(function(){var e=$('[name="'+$(this).attr("toggle")+'"]');"password"==e.attr("type")?($(this).text($(this).data("hide")),e.attr("type","text")):($(this).text($(this).data("show")),e.attr("type","password"))});let e=window.location.hash;if(null!=e&&""!==e){let n=$("#content.bootstrap .ingenico-settings .form-wrapper .panel-footer");"#support"===e?n.hide():n.show(),$(".nav-tabs li").removeClass("active"),$(".tab-content .tab-pane").removeClass("active"),$('.nav-tabs li a[href="'+e+'"]').parent().addClass("active"),$(".tab-content "+e).addClass("active"),$("#configuration_form").attr("action",window.location.href),Ingenico.connectExistingAccount()}$(".nav-tabs li a").click(function(){let e=this.href.split("#")[1];window.location.hash=e,$("#configuration_form").attr("action",window.location.href);let n=$("#content.bootstrap .ingenico-settings .form-wrapper .panel-footer");"support"===e?n.hide():n.show()}),$(document).keydown(function(e){9==e.keyCode&&$(".modal-backdrop").is(":visible")&&e.preventDefault(),27==e.keyCode&&Ingenico.closeModal()});var n=$("#agreement");n.is(":checked")?$("#registration-btn").removeAttr("disabled").removeClass("disabled"):$("#registration-btn").attr("disabled","disabled").addClass("disabled"),n.click(function(){$(this).is(":checked")?$("#registration-btn").removeAttr("disabled").removeClass("disabled"):$("#registration-btn").attr("disabled","disabled").addClass("disabled")}),$("[name=submit_save_countries]").click(function(e){e.preventDefault(),Ingenico.addCountries()}),$(".paymentpage_template input[type=file]").live("change",function(){var e=$("input[type=file]").val().split("\\").pop();$(".paymentpage_template .upload-label").html(e)})},pattern:/[a-zA-Z0-9_\-\+\.]/,getRandomByte:function(){if(window.crypto&&window.crypto.getRandomValues){var e=new Uint8Array(1);return window.crypto.getRandomValues(e),e[0]}if(window.msCrypto&&window.msCrypto.getRandomValues){e=new Uint8Array(1);return window.msCrypto.getRandomValues(e),e[0]}return Math.floor(256*Math.random())},generateHash:function(e,n){let t=Array.apply(null,{length:n}).map(function(){for(var e;;)if(e=String.fromCharCode(this.getRandomByte()),this.pattern.test(e))return e},this).join("");document.getElementsByName(e)[0].value=t},copyValue:function(e,n){let t=document.createElement("textarea"),o=document.getElementsByName(e)[0].value;t.value=o,t.setAttribute("readonly",""),t.style={position:"absolute",left:"-9999px"},document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t),$(".copy-response[data-copy='"+n+"']").slideDown(),setTimeout(function(){$(".copy-response[data-copy='"+n+"']").slideUp()},3e3)},copyLink:function(e,n){var t=document.createElement("textarea");t.value=e,t.setAttribute("readonly",""),t.style={position:"absolute",left:"-9999px"},document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t),$(".copy-response[data-copy='"+n+"']").slideDown(),setTimeout(function(){$(".copy-response[data-copy='"+n+"']").slideUp()},6e3)},toggleTooltip:function(e){let n=document.getElementById(e);"none"===n.style.display?n.style.display="block":n.style.display="none"},openModal:function(e,n,t){void 0===n&&(n={}),void 0===t&&(t=function(){});let o=$("#"+e);$(window).scrollTop();return o.find(".modal-dialog").addClass("modal-dialog-scrollable"),o.modal(n),o.on("shown.bs.modal",function(){$("body").css("overflow","auto"),$("html, body").animate({scrollTop:0},"slow"),t()}),o.on("hide.bs.modal",function(){}),o},closeModal:function(e,n){let t=$(".ingenico-modal");return void 0===e&&e||(t=$("#"+e)),void 0===n&&(n=function(){}),t.modal("hide"),t.on("hide.bs.modal",function(){}),setTimeout(function(){n()},300),t},filterCountries:function(e){var n="";$('#countries-list [type="checkbox"]:checked').each(function(){n+=this.value+"|"}).promise().done(function(){$.ajax(ingenico_ajax_url,{method:"POST",data:{query:e,method:"filter_countries",selected_countries:n},dataType:"json"}).success(function(e){$("#countries-list ul").html(e)})})},filterPaymentMethods:function(e){$.ajax(ingenico_ajax_url,{method:"POST",data:{query:e,method:"filter_payment_methods"},dataType:"json"}).success(function(e){$("#payment-methods-list ul").html(e),Ingenico.getSelectedPaymentMethods(function(e){Ingenico.disableAfterpayOrKlarnaMethods(e)})})},getSelectedPaymentMethods:function(e){let n=$("#pm_list").val();Ingenico.getModalPaymentMethods(function(t){let o=n.concat(t);e(o)})},getModalPaymentMethods:function(e){let n=[];$('#payment-methods-list input[name="payment_methods[]"]:checked').each(function(){let e=$(this).val();n.push(e)}).promise().done(function(){e(n)})},disableAfterpayOrKlarnaMethods:function(e){let n=$('#payment-methods-list input[value="afterpay"]'),t=$('#payment-methods-list input[value="klarna"]'),o=$('#payment-methods-list input[name="payment_methods[]"]');e.includes("afterpay")?(n.prop("disabled",!1).removeClass("disabled"),t.prop("disabled",!0).addClass("disabled")):e.includes("klarna")?(t.prop("disabled",!1).removeClass("disabled"),n.prop("disabled",!0).addClass("disabled")):o.prop("disabled",!1).removeClass("disabled")},removePaymentMethod:function(e){$("#pm_list option[value='"+e+"']").remove(),$("li."+e).fadeOut(1e3,function(){$(this).remove()})},addPaymentMethod:function(){Ingenico.getSelectedPaymentMethods(function(e){$.ajax(ingenico_ajax_url,{method:"POST",data:{payment_methods:e,method:"fetch_payment_methods"},dataType:"json"}).success(function(e){$("#selected_payment_methods").html(e),Ingenico.closeModal("payment-methods-list")})})},getPaymentMethodModal:function(){let e=$("#pm_list").val();$.ajax(ingenico_ajax_url,{data:{method:"payment_method_modal",selected:e},dataType:"json"}).success(function(e){$("#payment-methods-list .methods-list").html(e),Ingenico.getSelectedPaymentMethods(function(e){Ingenico.disableAfterpayOrKlarnaMethods(e)})})},hasSomeParentTheClass:function(e,n){return"HTML"!==e.tagName&&(e.className.split(" ").indexOf(n)>=0||e.parentNode&&this.hasSomeParentTheClass(e.parentNode,n))},showMigrationUI:function(){$(".installation-options").hide(),$("#migration-frm").show(),$("#create-account-frm").hide(),$("#configuration_form").hide(),$(".ingenico-settings, .ingenico-header").addClass("install"),$(".account-creation-progress .progress-half").addClass("active"),$(".header-links").show(),$(".create-account.creation").hide(),$(".create-account.configuration").show(),$(".create-account-form .panel-footer").show()},createAccount:function(){$(".installation-options").hide(),$(".create-account-form").show(),$(".ingenico-settings, .ingenico-header").addClass("install"),$(".installation-view").show(),$(".settings-form").hide(),$(".account-creation-progress .progress-half").addClass("active"),$(".header-links").show(),$(".create-account.creation").hide(),$(".create-account.configuration").show(),$(".create-account-form .panel-footer").show(),$("#migration-frm").hide()},connectExistingAccount:function(){$(".installation-options").hide(),$(".settings-form").css("display","grid"),$(".ingenico-header .btn-toolbar").show(),$(".ingenico-settings, .ingenico-header").removeClass("install"),$(".installation-view").hide(),$(".registration-complete").hide(),$(".account-creation-progress, .ingenico-header").removeClass("done"),$(".header-links").show(),$(".create-account.creation").show(),$(".create-account.configuration").hide()},backToInstallation:function(e){e&&e.preventDefault(),$(".installation-view").show(),$(".installation-options").show(),$(".create-account-form").hide(),$(".account-creation-progress .progress-half").removeClass("active"),$(".header-links").show(),$(".create-account.creation").hide(),$(".create-account.configuration").show()},registerAccount:function(e){if(!($(".installation-form [name=company_name]").val().length>0&&this.validateEmail($(".installation-form [name=account_email]").val())&&$(".installation-form #agreement").is(":checked")))return!1;e.preventDefault(),$.ajax(ingenico_ajax_url,{data:{method:"register_account",account_info:$(".installation-form").serialize()},dataType:"json"}).success(function(e){$(".installation-form").hide(),$(".registration-complete").css("display","inline-block"),$(".account-creation-progress .progress-half").removeClass("active"),$(".account-creation-progress, .ingenico-header").addClass("done")})},validateEmail:function(e){return!!$.trim(e).match(/^([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/)},addCountries:function(){var e=[],n=[];$("#countries-list [type=checkbox]").each(function(){if(this.checked){const t=$(this).val(),o=$(this).closest(".label-container").text();["SE","FI","DK","NO","DE","NL"].indexOf(t)>-1&&n.push(o),e.push(t)}}).promise().done(function(){if((e.indexOf("DE")>-1||e.indexOf("NL")>-1)&&void 0===window.OPENINVOICE_METHOD){let e=$("#openinvoice_selected2").html();$("#openinvoice_selected2").html(e.replace("%country%",n.join(", "))),Ingenico.closeModal(!1,function(){Ingenico.openModal("openinvoice-select-payment-modal")})}else Ingenico.fetchPaymentMethods(e,window.OPENINVOICE_METHOD)})},fetchPaymentMethods:function(e,n){return $.ajax(ingenico_ajax_url,{method:"POST",data:{countries:e,method:"fetch_methods_by_countries",openinvoice:n},dataType:"json"}).success(function(e){$("#selected_payment_methods").html(e),Ingenico.closeModal("countries-list")})},addMigrationLog:function(e){let n=$("#migration-logs");n.append(e+"\r\n"),n.scrollTop(n[0].scrollHeight-n.height())},doMigrationAction:function(e,n){return $.ajax(window.migration_ajax_url,{data:{action:e},dataType:"json"}).done(function(e){e.data.forEach(function(e,n,t){Ingenico.addMigrationLog(e)}),e.success?n(null,e):n(e.data,e)}).fail(function(e,t,o){Ingenico.addMigrationLog(JSON.stringify(o)),n(o,{})})},doMigrate:function(){async.series({step1:function(e){Ingenico.doMigrationAction("step1",e)},step2:function(e){Ingenico.doMigrationAction("step2",e)},step3:function(e){Ingenico.doMigrationAction("step3",e)},step4:function(e){Ingenico.doMigrationAction("step4",e)},step5:function(e){Ingenico.addMigrationLog("Import Aliases..."),Ingenico.doMigrationAction("aliases_info",function(n,t){var o=t.aliases,a=o.length,i=0;async.eachSeries(o,function(e,n){Ingenico.addMigrationLog("Import alias #"+e),$.ajax(window.migration_ajax_url,{data:{action:"import_alias",alias_id:e},dataType:"json"}).done(function(n){Ingenico.addMigrationLog("Alias #"+e+" was imported")}).always(function(){i++,console.log(i),console.log(a);const e=Math.floor(i/a*100);$("#aliases_progress").css("width",e+"%").attr("aria-valuenow",e),n()})},function(n){n&&console.log(n),e()})})},step6:function(e){Ingenico.doMigrationAction("finish",e)}},function(e,n){console.log(n),Ingenico.addMigrationLog("Finished")})}};$(function(){Ingenico.init()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
