# This is a sample build configuration for PHP.
# Check our guides at https://confluence.atlassian.com/x/e8YWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: php:7.1.1

clone:
  depth: full              # SonarCloud scanner needs the full history to assign issues properly

definitions:
  caches:
    sonar: ~/.sonar/cache  # Caching SonarCloud artifacts will speed up your build
  services:
    docker:
      memory: 2048
  steps:
      - step:
            name: Deploy Staging
            caches:
                - composer
            artifacts:
                - vendor/**
            script:
                - php -v
      - step: &analyze-sonarcloud
            name: Analyze on SonarCloud
            caches:
                - sonar
                - docker
            script:
                - pipe: sonarsource/sonarcloud-scan:1.2.1
                  variables:
                      SONAR_TOKEN: ${SONAR_TOKEN}
                      # EXTRA_ARGS: '-Dsonar.sources=src -Dsonar.tests=src -Dsonar.test.inclusions="**/testing/**,**/*.spec.ts" -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info'
      - step: &code-check
            name: Code Check
            caches:
                - composer
            artifacts:
                - vendor/**
            script:
                - apt-get update && apt-get install -y git unzip libfreetype6-dev libjpeg-dev libpng-dev libzip-dev libonig-dev libicu-dev
                - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
                - docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
                - docker-php-ext-configure intl
                - docker-php-ext-install -j$(nproc) gd intl
                - docker-php-ext-install bcmath zip
                - echo 'memory_limit = 2G' >> /usr/local/etc/php/conf.d/docker-php-memlimit.ini
                - rm -rf ./composer.json
                - composer require squizlabs/php_codesniffer
                - composer require phpmd/phpmd
                # - php vendor/bin/phpmd ./ text cleancode,codesize,controversial,design,naming,unusedcode --exclude vendor/
                - php vendor/bin/phpcs --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1 --standard=PSR1 --ignore=./vendor/* .
                - php vendor/bin/phpcs --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1 --standard=PSR2 --ignore=./vendor/* .


# Currently we run it for all branches and pull requests.
# Later we would split it up by "branches", where we would have image and script for "master" and same for "develop" and "feature/*" branches.
pipelines:
  default:
      - step: *analyze-sonarcloud
      - step: *code-check
  pull-requests:
    '**':
      - step: *analyze-sonarcloud
      - step: *code-check
